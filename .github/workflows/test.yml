name: Tests

on: [push]

jobs:

  script-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install BATS
        env:
          BATS_VERSION: 1.7.0
          BATS_REPO: https://github.com/bats-core/bats-core
          BATS_PATH: /usr/local/bats
        run: |
          sudo git clone --depth 1 --branch v$BATS_VERSION $BATS_REPO $BATS_PATH
          echo $BATS_PATH/bin >> $GITHUB_PATH
      - uses: actions/checkout@v2
      - name: Run BATS tests
        run: make test

  example-target:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - uses: actions/checkout@v2
      - run: make example

  action-test-assert-success-reusable:
    uses: .github/workflows/reusable-action-test.yml
    with:
      name: assert-success-reusable
      when: the binary files are identical and the zip files are identical
      assert: success
      instructions:
        cd testdata/example-app
        go build -trimpath -o "$TARGET_DIR/$BIN_NAME" .


  action-test-assert-success:
    runs-on: ubuntu-latest
    env:
      WHEN: the binary and zip files have the same SHA256 sum
    steps:
      - uses: actions/checkout@v3
      - name: Invoke actions-reproducible-build when ${{ env.WHEN }}
        id: build
        uses: ./ # This is the action defined in this repo.
        with:
          product_name: example-app
          product_version: 1.0.0
          go_version: 1.17
          os: linux
          arch: amd64
          instructions: |-
            cd testdata/example-app
            go build -trimpath -o "$TARGET_DIR/$BIN_NAME" .
        continue-on-error: true
      - run: ./scripts/gha_assert_success "${{ steps.build.outcome }}"

  action-test-assert-failure-zip-mismatch:
    runs-on: ubuntu-latest
    env:
      WHEN: the zip files have different SHA256 sums
    steps:
      - uses: actions/checkout@v3
      - name: Invoke actions-reproducible-build when ${{ env.WHEN }}
        id: build
        uses: ./ # This is the action defined in this repo.
        with:
          product_name: example-app
          product_version: 1.0.0
          go_version: 1.17
          os: linux
          arch: amd64
          instructions: |-
            cd testdata/example-app
            go build -trimpath -o "$TARGET_DIR/$BIN_NAME" .
            # Insert something random into the zipped dir.
            head -c100 < /dev/urandom > "$TARGET_DIR/random.bytes"
        continue-on-error: true
      - run: ./scripts/gha_assert_failure "${{ steps.build.outcome }}"

  action-test-assert-failure-bin-mismatch:
    runs-on: ubuntu-latest
    env:
      WHEN: the binary files have different SHA256 sums
    steps:
      - uses: actions/checkout@v3
      - name: Invoke actions-reproducible-build when ${{ env.WHEN }}
        id: build
        uses: ./ # This is the action defined in this repo.
        with:
          product_name: example-app
          product_version: 1.0.0
          go_version: 1.17
          os: linux
          arch: amd64
          instructions: |-
            cd testdata/example-app
            # Don't use -trimpath so we get different binaries.
            go build -o "$TARGET_DIR/$BIN_NAME" .
        continue-on-error: true
      - run: ./scripts/gha_assert_failure "${{ steps.build.outcome }}"
