name: Tests

on: [push]

env:
  # INSTRUCTIONS_REPRODUCIBLE_GO_1_17 are reproducible build instructions
  # when running on Go 1.17
  INSTRUCTIONS_REPRODUCIBLE_GO_1_17: |
    cd testdata/example-app
    go build -trimpath -o "$TARGET_DIR/$BIN_NAME" .

jobs:

  script-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install BATS
        env:
          BATS_VERSION: 1.7.0
          BATS_REPO: https://github.com/bats-core/bats-core
          BATS_PATH: /usr/local/bats
        run: |
          sudo git clone --depth 1 --branch v$BATS_VERSION $BATS_REPO $BATS_PATH
          echo $BATS_PATH/bin >> $GITHUB_PATH
      - uses: actions/checkout@v2
      - name: Run BATS tests
        run: make test

  example-target:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - uses: actions/checkout@v2
      - run: make example

  test-reproduced-ok:
    uses: ./.github/workflows/action-test.yml
    with:
      assert: success
      when: the binary files are identical and the zip files are identical
      instructions: ${{ env.INSTRUCTIONS_REPRODUCIBLE_GO_1_17 }}

  test-zip-mismatch:
    uses: ./.github/workflows/action-test.yml
    with:
      assert: failure
      when: the zip files are different
      instructions: |
        cd testdata/example-app
        go build -trimpath -o "$TARGET_DIR/$BIN_NAME" .
        # Insert something random into the zipped dir.
        head -c100 < /dev/urandom > "$TARGET_DIR/random.bytes"

  test-bin-mismatch:
    uses: ./.github/workflows/action-test.yml
    with:
      assert: failure
      when: the binary files are different
      instructions: |
        cd testdata/example-app
        # Don't use -trimpath so we get different binaries.
        go build -o "$TARGET_DIR/$BIN_NAME" .
