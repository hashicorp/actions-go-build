#!/bin/bash

set -Eeuo pipefail

log() { echo >&2 "==> $*"; }
die() { log "$(bold_red "FATAL: ") $(bold "$*")"; exit 1; }

ok() { log "$(bold_green "OK: $*")"; }

styled_text() { ATTR="$1"; shift; echo -en '\033['"${ATTR}m$*"'\033[0m'; }

bold()      { styled_text "1"    "$*"; }
blue()      { styled_text "94"   "$*"; }
bold_blue() { styled_text "1;94" "$*"; }
red()       { styled_text "91"   "$*"; }
bold_red()  { styled_text "1;91" "$*"; }
green()     { styled_text "92"   "$*"; }

# shellcheck disable=SC2021 # We want to replace square brackets.
zero="$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')"

while read -r _ local_oid _ remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for version consistency.
		make version/check || die "Version check 'make check/version' failed."
		log "✓ Version check passed."

		CL_FILE="dev/changes/v$(cat dev/VERSION).md"
		# Check for changelog update.
		git diff --name-only "$range" | grep -qE "^$CL_FILE\$" || {
			die "No update to changelog file '$CL_FILE'"
		}

		# Just run the tests. (TODO: Run then against _commited_ changes only.)
		make test || die "Tests failed."
		log "✓ Tests passed."

	fi
done

exit 0
