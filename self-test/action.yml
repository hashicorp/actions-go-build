name: Go Build Action Self-Tests
author: Release Engineering <team-rel-eng@hashicorp.com>
description: Action for testing hashicorp/actions-go-build.

inputs:
  # Test parameters.
  when:
    description: A sentence fragment describing the scenario. E.g. 'the worzels are singing'.
    required: true
  assert:
    description: Either 'success' or 'failure' to indicate if we expect the action to succeed or fail.
    required: true

  # Action under test configuration.
  instructions:
    description: Build instructions to use.
    required: true
  reproducible:
    description: Passed through to action.
    default: assert
    required: false
  product_name:
    description: Passed through to action.
    default: example-app
    required: false
  product_version:
    description: Passed through to action.
    default: 1.0.0
    required: false
  go_version:
    description: Passed through to action.
    default: 1.17
    required: false
  os:
    description: Passed through to action.
    default: linux
    required: false
  arch:
    description: Passed through to action.
    default: amd64
    required: false

runs:
  using: composite
  steps:
    - if: inputs.assert != 'success' && inputs.assert != 'failure'
      shell: bash
      run: |
        echo "assert must be one of: 'success' or 'failure'"
        exit 1
    - name: Delete the .git directory
      shell: bash
      run: |
        # Delete .git because it is not present when this action is
        # called from external repos, so this ensures our test env is
        # as similar as possible to when third parties use it.
        rm -rf .git
    - name: Invoke actions-go-build when ${{ env.WHEN }}
      id: build
      uses: ./ # The action at the root of this repo.
      with:
        product_name: ${{ inputs.product_name }}_${{ github.job }}
        product_version: ${{ inputs.product_version }}
        go_version: ${{ inputs.go_version }}
        os: ${{ inputs.os }}
        arch: ${{ inputs.arch }}
        reproducible: ${{ inputs.reproducible }}
        instructions: ${{ inputs.instructions }}
      continue-on-error: true
    - if: inputs.assert == 'success'
      name: Assert The Action Succeeded
      shell: bash
      env:
        WHEN: ${{ inputs.when }}
      run: ./scripts/gha_assert_success "${{ steps.build.outcome }}"
    - if: inputs.assert == 'failure'
      name: Assert The Action Failed Correctly
      shell: bash
      env:
        WHEN: ${{ inputs.when }}
      run: ./scripts/gha_assert_failure "${{ steps.build.outcome }}"
